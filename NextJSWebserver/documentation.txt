For the web app there are two folders called frontend and backend

The frontend folder is holding all of the react files and info
	What I changed in the fronted files is in the _app.js file there is a function that will fetch the outside api that is on port 3001
	it will return the data from the database in the variable called backendData you can use this to access each individual element in the response
		For example:
			
			backendData is structured like this {"lot_name": nethkin, "spaceID": 30, "type": student, "availability": 1}
			
			{backendData.map((val) => {
        			return <h1>lot_name: {val.lot_name}</h1>
      			})}
      			
      			val.lot_name is will return the lot name for all of the entries in the database for now i have 3 entries in my local database so when the above code is rendered
      			it will render lot_name: nethkin three times on the page
      			
      			
      		For running the react frontend:
      			you will need to run the command npm install axios (unless it is already there)
      			then run npm run build
      			then run npm run dev
      			this will boot up the react server
      			
      		MOST OF THIS SHOULD ALREADY BE WORKING FOR YOU BUT YOU WILL NEED TO NPM I AXIOS IF IT IS NOT WORKING
      			

The backend folder holds the new API I made (i got tired of the problems with the other one so i just remade it it's currently not dockerized solely so corey will be able to run it on his laptop

	What I changed in the backend files is added a index.js file which is the api.
	The api is hosted on port 3001
	
	FOR THE API TO WORK:
		1) you will need to make a databse on your localhost called parkingLots along with a table called parkingLots in that database
			THE COMMANDS ARE HERE:
						CREATE DATABASE parkingLots;
						
						use parkingLots;
						
						CREATE TABLE parkingLots (
	    						lot_name VARCHAR(255) NOT NULL,
	    						spaceID VARCHAR(255) NOT NULL,
	    						type    VARCHAR(255) NOT NULL,
	    						availability INTEGER NOT NULL,
	    						PRIMARY KEY (spaceID)
							);
							
						THIS IS TO MAKE ONE ENTRY INTO THE TABLE
						
						INSER INTO parkingLots VALUES(
							"nethkin",
							"30",
							"student",
							1
							);
			
			Also under the DATABASE CONNECTION AREA comment in index.js you will need to change the password to whatever password you made for your mysql login mine is just password
						
		
		2) You will need to run npm install before you can start the server
			IF JUST RUNNING NPM INSTALL STILL DOES NOT LET THE SERVER START
				TRY THIS:
						run npm i express mysql nodemon cors
						
		3) to run the server type npm run devStart
			YOU SHOULD GET A MESSAGE IN THE CONSOLE THAT SAYS SERVER STARTED ON PORT 3001
			
		(NOTE) TO GET A DIFFERENT SET OF VALUES OR REALLY ANYTHING DIFFERENT FROM THE DATABASE YOU NEED TO CHANGE THE SQL VARIABLE TO WHATEVER COMMAND YOU WANT I KNOW YOU TOOK DBMS SO YOU KNOW SQL
			
			
					
			
			
After alll of this (which most of it should be done already) when you access the http://localhost:3000 it should access the external api on port 3001 automatically and database you can check this by pressing f12
and going into the network tab and looking for the word get click on it and click on response you should see the valuse you have in the database.
