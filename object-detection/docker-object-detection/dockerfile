FROM python:3.10.9

# Update the software
RUN apt-get update
RUN apt-get upgrade -y

# Retrieve the repository. "ADD" is used here instead of "RUN git clone" to retreive new commits.
# RUN git clone --branch docker-object-detection https://github.com/briannaosms/parking-occupancy-detection-system.git && \
    # cd /parking-occupancy-detection-system/
ADD https://github.com/briannaosms/parking-occupancy-detection-system/archive/refs/heads/docker-object-detection.zip /

# Extract the archive and clean up.
RUN unzip docker-object-detection.zip && \
    rm docker-object-detection.zip && \
    mv parking-occupancy-detection-system-docker-object-detection pods
    
# Change the working directory to object detection folder.
WORKDIR /pods/object-detection/Mask-RCNN-TF2

# Install the prerequisite software.
RUN apt-get install ffmpeg libsm6 libxext6 python3-tk -y && \
    pip3 install -r requirements.txt && \
    python setup.py install && \
    export MPLBACKEND=TkAgg
    
# Install CUDA (TODO: to fix tensorflow errors)
# RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin && \
#     mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600 && \
#     wget https://developer.download.nvidia.com/compute/cuda/11.2.0/local_installers/cuda-repo-ubuntu2004-11-2-local_11.2.0-460.27.04-1_amd64.deb 

# RUN dpkg -i cuda-repo-ubuntu2004-11-2-local_11.2.0-460.27.04-1_amd64.deb && \
#     apt-key add /var/cuda-repo-ubuntu2004-11-2-local/7fa2af80.pub && \
#     apt-get install nvidia-settings && \
#     apt-get update && \
#     apt-get -y install cuda

# RUN apt-get install cuda && \
#     apt-get install nvidia-gds

# RUN export PATH=/usr/local/cuda-12.0/bin${PATH:+:${PATH}} && \
#     export LD_LIBRARY_PATH=/usr/local/cuda-12.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}} && \
#     systemctl enable nvidia-persistenced && \
#     cp /lib/udev/rules.d/40-redhat.rules /etc/udev/rules.d && \
#     sed -i 's/SUBSYSTEM!="memory",.*GOTO="memory_hotplug_end"/SUBSYSTEM=="*", GOTO="memory_hotplug_end"/' /etc/udev/rules.d/40-redhat.rules

# RUN apt-get install g++ freeglut3-dev build-essential libx11-dev \
#     libxmu-dev libxi-dev libglu1-mesa libglu1-mesa-dev libfreeimage-dev

# Download pretrained COCO weights.
RUN wget https://github.com/matterport/Mask_RCNN/releases/download/v2.0/mask_rcnn_coco.h5

# Install COCO API.
RUN wget https://github.com/waleedka/coco/archive/refs/heads/master.zip -O coco.zip && \
    unzip coco.zip && \
    rm coco.zip && \
    cd coco-master/PythonAPI && \
    make
 
# Copy testing images from host machine.
COPY images/ /pods/object-detection/images/

# Run command line. 
# CMD [ "bash" ]