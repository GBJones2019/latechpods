# FROM python:3.10.9
FROM tensorflow/tensorflow:latest-gpu

# Update the software
RUN apt-get update
RUN apt-get upgrade -y

# Retrieve the repository. "ADD" is used here instead of "RUN git clone" to retreive new commits.
ADD https://github.com/briannaosms/parking-occupancy-detection-system/archive/refs/heads/docker-object-detection.zip /

# Extract the archive and clean up.
RUN unzip docker-object-detection.zip && \
    rm docker-object-detection.zip && \
    mv parking-occupancy-detection-system-docker-object-detection pods
    
# Change the working directory to object detection folder.
WORKDIR /pods/object-detection/Mask-RCNN-TF2

# Install the prerequisite software.
RUN apt-get install python3-tk -y && \
    pip3 install -r requirements.txt && \
    pip3 install docutils==0.19 && \
    python setup.py install
    
# Download pretrained COCO weights.
ADD https://github.com/matterport/Mask_RCNN/releases/download/v2.0/mask_rcnn_coco.h5 /pods/object-detection/Mask-RCNN-TF2

# Install COCO API.
ADD https://github.com/waleedka/coco/archive/refs/heads/master.zip /pods/object-detection/Mask-RCNN-TF2
RUN unzip master.zip && \
    rm master.zip && \
    cd coco-master/PythonAPI && \
    make
 
# Copy testing images from host machine.
COPY /images/ /pods/object-detection/images/

# [DEV] #
# Run command line. 
# RUN python object-detect.py
# CMD [ "bash" ]
# Save the results to the local directory
# COPY /pods/object-detection/Mask-RCNN-TF2/output.jpg .
# # Install NVIDIA driver
# RUN wget https://us.download.nvidia.com/XFree86/Linux-x86_64/525.85.05/NVIDIA-Linux-x86_64-525.85.05.run && \
#     chmod +x NVIDIA-Linux-x86_64-525.85.05.run && \
#     ./NVIDIA-Linux-x86_64-525.85.05.run    

# CMD [ "nvidia-smi" ]
# apt-get install linux-headers-generic
# Install NVIDIA driver
# RUN wget https://us.download.nvidia.com/XFree86/Linux-x86_64/525.85.05/NVIDIA-Linux-x86_64-525.85.05.run

# Install CUDA (TODO: to fix tensorflow errors)
# RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin && \
#     mv cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600 && \
#     wget https://developer.download.nvidia.com/compute/cuda/12.0.1/local_installers/cuda-repo-ubuntu2204-12-0-local_12.0.1-525.85.12-1_amd64.deb

# RUN dpkg -i cuda-repo-ubuntu2204-12-0-local_12.0.1-525.85.12-1_amd64.deb && \
#     cp /var/cuda-repo-ubuntu2204-12-0-local/cuda-*-keyring.gpg /usr/share/keyrings/ && \
#     apt-get update && \
#     apt-get -y install cuda

# fix to nvidia settings 
# RUN wget http://security.ubuntu.com/ubuntu/pool/main/s/screen-resolution-extra/screen-resolution-extra_0.18.2.tar.gz

# RUN apt-get install cuda && \
#     apt-get install nvidia-gds

# RUN export PATH=/usr/local/cuda-12.0/bin${PATH:+:${PATH}} && \
#     export LD_LIBRARY_PATH=/usr/local/cuda-12.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}} && \
#     systemctl enable nvidia-persistenced && \
#     cp /lib/udev/rules.d/40-redhat.rules /etc/udev/rules.d && \
#     sed -i 's/SUBSYSTEM!="memory",.*GOTO="memory_hotplug_end"/SUBSYSTEM=="*", GOTO="memory_hotplug_end"/' /etc/udev/rules.d/40-redhat.rules

# RUN apt-get install g++ freeglut3-dev build-essential libx11-dev \
#     libxmu-dev libxi-dev libglu1-mesa libglu1-mesa-dev libfreeimage-dev

# RUN git clone --branch docker-object-detection https://github.com/briannaosms/parking-occupancy-detection-system.git && \
    # cd /parking-occupancy-detection-system/